#!/bin/bash
set -euo pipefail

# Script config
CMD_NAME="7d2d_server"
PROCESS_NAME="7DaysToDieServe" # first 15 chars of process, this depends on var GAME_BIN

# Game config
GAME_USER="steam"
GAME_DIR="/home/steam/7d2d"
GAME_BIN="$GAME_DIR/7DaysToDieServer.x86_64"
GAME_LOG_DIR="$GAME_DIR/7DaysToDieServer_Data/logs"
GAME_LOGFILE="$GAME_LOG_DIR/output_log_$(date +%Y-%m-%d__%H-%M-%S).log"
GAME_STARTUP_LOG="$GAME_LOG_DIR/startup_log_$(date +%Y-%m-%d__%H-%M-%S).log"
GAME_DEFAULT_CONFIGFILE="serverconfig_game_default.xml"
GAME_OPTS="-logfile $GAME_LOGFILE -quit -batchmode -nographics -dedicated "

start() {
    PID="$(get_pid)"
    if [[ "$PID" != "" ]]; then
        echo "Game server is already running"
        exit 3
    else
        echo "Starting game server..."
        local used_configfile=""

        if [[ $CONFIGFILE == "" ]]; then
            echo "Using default configfile $GAME_DEFAULT_CONFIGFILE"
            used_configfile="$GAME_DEFAULT_CONFIGFILE"
        elif [[ -e "$GAME_DIR/$CONFIGFILE" ]]; then
            echo "Using configfile $CONFIGFILE"
            used_configfile="$CONFIGFILE"
        else
            echo "configfile '$GAME_DIR/$CONFIGFILE' doesn't exist"
            exit 3
        fi

        set -x
        su -l $GAME_USER -c "nohup $GAME_BIN $GAME_OPTS -configfile=$used_configfile > $GAME_STARTUP_LOG 2>&1 &"
        set +x

        sleep 1

        PID="$(get_pid)"
        if [[ "$PID" != "" ]]; then
            echo "success"
            exit 0
        else
            echo "failure"
            cat $GAME_STARTUP_LOG
            exit 1
        fi
    fi
}

stop() {
    PID="$(get_pid)"
    if [[ "$PID" == "" ]]; then
        echo "Game server is already stopped"
        exit 3
    else
        echo "Stopping game server..."
        sudo kill $PID
        exit $?
    fi
}

status() {
    PID="$(get_pid)"
    if [[ "$PID" == "" ]]; then
        echo "Game server is stopped"
        exit 3
    else
        echo "Game server is running: $(ps -p $PID)"
        exit 0
    fi
}

get_pid() {
    set +e
    local PID=$(pgrep -u $GAME_USER -x $PROCESS_NAME)
    set -e

    echo $PID
}

set +u
COMMAND="$1"
CONFIGFILE="$2"
set -u

case "$COMMAND" in
  start)
        echo "DEBUG: $CONFIGFILE"
        start
        ;;
  stop)
        stop
        ;;
  status)
        status
        ;;
  *)
        echo $"Usage: $CMD_NAME <command> (<command> must be one of: start, stop,status)"
        exit 1
esac

exit 0
